<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
  http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
  version="3.1"  metadata-complete="false">
  
  
   <!-- spring的配置文件-->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>
    	
    	classpath:springMVC.xml
    	classpath:springJDBC.xml
    	classpath:springShiro.xml
    	
    	
    </param-value>
  </context-param>
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>



    <!-- 配置web.xml允许访问*.jpg -->
    <!--<servlet-mapping>-->
        <!--<servlet-name>default</servlet-name>-->
        <!--<url-pattern>*.jpg</url-pattern>-->
    <!--</servlet-mapping>-->
    <!--&lt;!&ndash; 配置web.xml允许访问*.jpg &ndash;&gt;-->
    <!--<servlet-mapping>-->
        <!--<servlet-name>default</servlet-name>-->
        <!--<url-pattern>*.png</url-pattern>-->
    <!--</servlet-mapping>-->

    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.css</url-pattern>

    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.js</url-pattern>
    </servlet-mapping>



    <!--Shiro过滤器  -->
    <!-- 配置Shiro过滤器,先让Shiro过滤系统接收到的请求 -->
    <!-- 这里filter-name必须对应applicationContext.xml中定义的<bean id="shiroFilter"/> -->
    <!-- 使用[/*]匹配所有请求,保证所有的可控请求都经过Shiro的过滤 -->
    <!-- 通常会将此filter-mapping放置到最前面(即其他filter-mapping前面),以保证它是过滤器链中第一个起作用的 -->
    <filter>
        <filter-name>shiroFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
        <init-param>
            <!--    该值缺省为false,表示生命周期由SpringApplicationContext管理,设置为true则表示由ServletContainer管理   -->
            <param-name>targetFilterLifecycle</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>shiroFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>



    <!-- spring mvc核心：分发servlet -->
  <servlet>
    <servlet-name>springmvc</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <!-- spring mvc的配置文件 -->
   <!--  <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:springMVC.xml</param-value>
    </init-param> -->
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>springmvc</servlet-name>
    <url-pattern>/</url-pattern>
  </servlet-mapping>

    <!-- 解决中文问题 -->
    <filter>
        <filter-name>CharacterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>utf-8</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>CharacterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>



	 
	
	

    

  
    
    <!-- 极验科技验证码测试 -->
    <servlet>
		<servlet-name>StartCaptchaServlet</servlet-name>
		<display-name>StartCaptchaServlet</display-name>
		<description></description>
		<servlet-class>com.soulcoder.partener.gt.StartCaptchaServlet</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>VerifyLoginServlet</servlet-name>
		<display-name>VerifyLoginServlet</display-name>
		<description></description>
		<servlet-class>com.soulcoder.partener.gt.VerifyLoginServlet</servlet-class>
	</servlet>
    <servlet-mapping>
		<servlet-name>VerifyLoginServlet</servlet-name>
		<url-pattern>/gt/ajax-validate</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>StartCaptchaServlet</servlet-name>
		<url-pattern>/gt/register</url-pattern>
	</servlet-mapping>
    <error-page>
		<error-code>404</error-code>
		<location>/page/error.jsp</location>
	</error-page>
    
</web-app>
